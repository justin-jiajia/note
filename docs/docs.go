// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/notes": {
            "post": {
                "description": "Create a new note with title, body, and optional encryption",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Create a note",
                "parameters": [
                    {
                        "description": "Note creation data",
                        "name": "note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateNoteRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.NoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/notes/{slug}": {
            "get": {
                "description": "Get a note by its slug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "View a note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Note slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.NoteResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a note's title and body by its slug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Update a note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Note slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Note update data",
                        "name": "note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.EditNoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.NoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a note by its slug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Delete a note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Note slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.CreateNoteRequest": {
            "description": "Request model for creating a new note",
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "body": {
                    "description": "Content of the note",
                    "type": "string"
                },
                "encryption_salt": {
                    "description": "Salt used for client-side encryption",
                    "type": "string"
                },
                "encryption_tag": {
                    "description": "Tag used for encryption verification",
                    "type": "string"
                },
                "encryption_verification_tag": {
                    "description": "Verification tag used for encryption",
                    "type": "string"
                },
                "is_encrypted": {
                    "description": "Whether the note should be encrypted",
                    "type": "boolean"
                },
                "title": {
                    "description": "Title of the note",
                    "type": "string"
                }
            }
        },
        "handler.EditNoteRequest": {
            "description": "Request model for updating an existing note",
            "type": "object",
            "properties": {
                "body": {
                    "description": "Content of the note",
                    "type": "string"
                },
                "title": {
                    "description": "Title of the note",
                    "type": "string"
                }
            }
        },
        "handler.ErrorResponse": {
            "description": "Error response model",
            "type": "object",
            "properties": {
                "error": {
                    "description": "Error message",
                    "type": "string"
                }
            }
        },
        "handler.NoteResponse": {
            "description": "Response model for note data",
            "type": "object",
            "properties": {
                "body": {
                    "description": "Content of the note",
                    "type": "string"
                },
                "created_at": {
                    "description": "Unix timestamp of note creation",
                    "type": "integer"
                },
                "encryption_salt": {
                    "description": "Salt used for client-side encryption (only included if note is encrypted)",
                    "type": "string"
                },
                "encryption_tag": {
                    "description": "Tag used for encryption verification (only included if note is encrypted)",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the note",
                    "type": "integer"
                },
                "is_encrypted": {
                    "description": "Whether the note is encrypted",
                    "type": "boolean"
                },
                "slug": {
                    "description": "URL-friendly identifier for the note",
                    "type": "string"
                },
                "title": {
                    "description": "Title of the note",
                    "type": "string"
                },
                "updated_at": {
                    "description": "Unix timestamp of last note update",
                    "type": "integer"
                }
            }
        },
        "handler.SuccessResponse": {
            "description": "Success response model",
            "type": "object",
            "properties": {
                "message": {
                    "description": "Success message",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
